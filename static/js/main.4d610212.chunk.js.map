{"version":3,"sources":["components/Header.js","hooks/useSelect.js","components/Formulario.js","components/Noticia.js","components/ListadoNoticias.js","App.js","serviceWorker.js","index.js","components/Formulario.module.css"],"names":["Header","titulo","className","href","useSelect","stateInicial","opciones","useState","state","setState","value","onChange","e","target","map","opcion","key","label","Formulario","setCategoria","categoria","SelectNoticias","styles","buscador","onSubmit","preventDefault","heading","type","btn_block","Noticia","noticia","urlToImage","url","title","description","source","imagen","src","alt","name","rel","ListadoNoticias","noticias","App","setNoticias","useEffect","a","fetch","response","json","articles","consultarAPI","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.4d610212.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = ({ titulo }) => {\n    return (\n        <nav className=\"nav-wrapper light-blue darken-3\" >\n            <a href=\"!#\" className=\"brand-logo center\">{titulo}</a>\n        </nav>\n    );\n}\n\nexport default Header;","import React, { useState } from 'react'\n\nconst useSelect = (stateInicial, opciones) => {\n\n    const [state, setState] = useState(stateInicial);\n    const SelectNoticias = () => (\n        <select\n            className=\"browser-default\"\n            value={state}\n            onChange={e => setState(e.target.value)}\n        >\n            {opciones.map(opcion => (\n                <option key={opcion.value} value={opcion.value}>{opcion.label}</option>\n            ))}\n        </select>\n    )\n    return [state, SelectNoticias];\n}\n\nexport default useSelect;","import React from 'react';\nimport styles from \"./Formulario.module.css\";\nimport useSelect from \"../hooks/useSelect\";\n\nconst Formulario = ({ setCategoria }) => {\n\n    const OPCIONES = [\n        { value: \"general\", label: \"General\" },\n        { value: \"business\", label: \"Negocios\" },\n        { value: \"entertaiment\", label: \"Entretenimiento\" },\n        { value: \"health\", label: \"Salud\" },\n        { value: \"science\", label: \"Ciencia\" },\n        { value: \"sports\", label: \"Deportes\" },\n        { value: \"technology\", label: \"Tecnologia\" },\n    ]\n\n    const [categoria, SelectNoticias] = useSelect(\"general\", OPCIONES);\n\n    const buscarNoticias = e => {\n        e.preventDefault();\n\n        setCategoria(categoria)\n    }\n\n\n    return (\n        <div className={`${styles.buscador} row`}>\n            <div className=\"col s12 m8 offset-m2\">\n                <form\n                    onSubmit={buscarNoticias}\n                >\n                    <h2 className={styles.heading}>Encuentra Noticias por Categoria</h2>\n                    <SelectNoticias />\n                    <div className=\"input-field col s12\">\n                        <input\n                            type=\"submit\"\n                            className={`${styles.btn_block} btn-large amber darken-2`}\n                            value=\"Buscar\"\n                        />\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default Formulario;","import React from 'react';\nconst Noticia = ({ noticia }) => {\n\n    const { urlToImage, url, title, description, source } = noticia;\n    const imagen = { urlToImage } ?\n        <div className=\"card-image\">\n            <img src={urlToImage} alt={title} />\n            <span className=\"card-title\">{source.name}</span>\n        </div>\n        : null;\n\n    return (\n        <div className=\"col s12 m6 l4\">\n            <div className=\"card\">\n                {imagen}\n                <div className=\"card-content\">\n                    <h3>{title}</h3>\n                    <p>{description}</p>\n                </div>\n                <div className=\"card-action\">\n                    <a\n                        href={url}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"waves-effect waves-light btn\"\n                    >Ver Noticia Completa</a>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Noticia;","import React from 'react';\nimport Noticia from \"./Noticia\";\n\nconst ListadoNoticias = ({ noticias }) => (\n    <div className=\"row\">\n        {noticias.map(noticia => (\n            <Noticia\n                key={noticia.url}\n                noticia={noticia}\n            />\n        ))}\n    </div>\n);\n\nexport default ListadoNoticias;","import React, { Fragment, useState, useEffect } from 'react';\nimport Header from \"./components/Header\";\nimport Formulario from \"./components/Formulario\";\nimport ListadoNoticias from \"./components/ListadoNoticias\";\n\nfunction App() {\n\n  const [categoria, setCategoria] = useState(\"\");\n  const [noticias, setNoticias] = useState([]);\n  useEffect(() => {\n    const consultarAPI = async () => {\n      const url = `https://newsapi.org/v2/top-headlines?country=co&category=${categoria}&apiKey=ae3cf9d810c2449d8b6858cb05fe015b`;\n      const response = await fetch(url);\n      const noticias = await response.json();\n\n      setNoticias(noticias.articles);\n    }\n    consultarAPI();\n  }, [categoria]);\n\n  return (\n    <Fragment>\n      <Header\n        titulo=\"Buscador de Noticias\"\n      />\n      <div className=\"container white\">\n        <Formulario\n          setCategoria={setCategoria}\n        />\n        <ListadoNoticias\n          noticias={noticias}\n        />\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"Formulario_heading__sN5Ey\",\"buscador\":\"Formulario_buscador__2ABO4\",\"btn_block\":\"Formulario_btn_block__3xO29\"};"],"sourceRoot":""}