{"version":3,"sources":["components/Formulario.module.css","components/Header.js","hooks/useSelect.js","components/Formulario.js","components/Noticia.js","components/ListadoNoticias.js","components/Spinner.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","titulo","className","styles","title","useSelect","stateInicial","opciones","useState","state","setState","value","onChange","e","target","map","opcion","key","label","Formulario","setCategoria","categoria","SelectNoticias","buscador","onSubmit","preventDefault","type","btn_block","Noticia","noticia","url","multimedia","abstract","imagen","src","alt","substr","style","textAlign","href","rel","ListadoNoticias","noticias","uri","Spinner","App","setNoticias","cargando","setCargando","useEffect","a","fetch","response","json","setTimeout","results","consultarAPI","componente","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1897e600.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"Formulario_heading__sN5Ey\",\"buscador\":\"Formulario_buscador__2ABO4\",\"btn_block\":\"Formulario_btn_block__3xO29\",\"title\":\"Formulario_title__2HaUb\"};","import React from 'react';\nimport styles from \"./Formulario.module.css\";\n\nconst Header = ({ titulo }) => {\n    return (\n        <div className={`${styles.title}`} >\n            <p>{titulo}</p>\n        </div>\n\n    );\n}\n\nexport default Header;","import React, { useState } from 'react'\n\nconst useSelect = (stateInicial, opciones) => {\n\n    const [state, setState] = useState(stateInicial);\n    const SelectNoticias = () => (\n        <select\n            className=\"browser-default\"\n            value={state}\n            onChange={e => setState(e.target.value)}\n        >\n            {opciones.map(opcion => (\n                <option key={opcion.value} value={opcion.value}>{opcion.label}</option>\n            ))}\n        </select>\n    )\n    return [state, SelectNoticias];\n}\n\nexport default useSelect;","import React, { Fragment } from 'react';\nimport styles from \"./Formulario.module.css\";\nimport useSelect from \"../hooks/useSelect\";\n\nconst Formulario = ({ setCategoria }) => {\n\n    const OPCIONES = [\n        { value: \"world\", label: \"General\" },\n        { value: \"business\", label: \"Negocios\" },\n        { value: \"t-magazine\", label: \"Entretenimiento\" },\n        { value: \"health\", label: \"Salud\" },\n        { value: \"science\", label: \"Ciencia\" },\n        { value: \"sports\", label: \"Deportes\" },\n        { value: \"technology\", label: \"Tecnologia\" },\n    ]\n\n    const [categoria, SelectNoticias] = useSelect(\"world\", OPCIONES);\n\n    const buscarNoticias = e => {\n        e.preventDefault();\n\n        setCategoria(categoria)\n    }\n\n    return (\n\n        <div className={`${styles.buscador} row`}>\n            <div className=\"col s12 m8 offset-m2\">\n                <form\n                    onSubmit={buscarNoticias}\n                >\n                    <SelectNoticias />\n                    <div className=\"input-field col s12\">\n                        <input\n                            type=\"submit\"\n                            className={`${styles.btn_block} btn-large`}\n                            value=\"Buscar\"\n                        />\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default Formulario;","import React from 'react';\n\n\nconst Noticia = ({ noticia }) => {\n\n    const { url, multimedia, title, abstract } = noticia;\n\n    const imagen = (multimedia) ?\n        <img className=\"activator\" src={multimedia[3].url} alt={title} />\n        : null;\n\n\n    return (\n        <div className=\"size col s12 m4 10\">\n            <div className=\"card medium  teal accent-1 hoverable\">\n                <div className=\"card-image\">\n                    {imagen}\n                </div>\n                <div className=\"card-content\">\n                    <h6><b>{title.substr(0, 40)}...</b></h6>\n                    <p><i>{abstract}</i></p>\n                </div>\n                <div className=\"card-action\" style={{ textAlign: \"center\" }}>\n                    <a\n                        href={url}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"waves-effect waves-light deep-orange lighten-2 btn\"\n                    >Ver Noticia Completa</a>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Noticia;","import React from 'react';\nimport Noticia from \"./Noticia\";\n\nconst ListadoNoticias = ({ noticias }) => (\n    <div className=\"row\">\n        {noticias.map(noticia => (\n            <Noticia\n                key={noticia.uri}\n                noticia={noticia}\n            />\n        ))}\n    </div>\n);\n\nexport default ListadoNoticias;","import React from 'react';\nimport \"./Spinner.css\";\n\nconst Spinner = () => {\n    return (\n        <div className=\"sk-fading-circle\">\n            <div className=\"sk-circle1 sk-circle\"></div>\n            <div className=\"sk-circle2 sk-circle\"></div>\n            <div className=\"sk-circle3 sk-circle\"></div>\n            <div className=\"sk-circle4 sk-circle\"></div>\n            <div className=\"sk-circle5 sk-circle\"></div>\n            <div className=\"sk-circle6 sk-circle\"></div>\n            <div className=\"sk-circle7 sk-circle\"></div>\n            <div className=\"sk-circle8 sk-circle\"></div>\n            <div className=\"sk-circle9 sk-circle\"></div>\n            <div className=\"sk-circle10 sk-circle\"></div>\n            <div className=\"sk-circle11 sk-circle\"></div>\n            <div className=\"sk-circle12 sk-circle\"></div>\n        </div>\n    );\n}\n\nexport default Spinner;","import React, { Fragment, useState, useEffect } from 'react';\nimport Header from \"./components/Header\";\nimport Formulario from \"./components/Formulario\";\nimport ListadoNoticias from \"./components/ListadoNoticias\";\nimport Spinner from './components/Spinner';\n\nfunction App() {\n\n  const [categoria, setCategoria] = useState(\"\");\n  const [noticias, setNoticias] = useState([]);\n  const [cargando, setCargando] = useState(false);\n\n  useEffect(() => {\n    if (categoria) {\n      const consultarAPI = async () => {\n        const url = `https://api.nytimes.com/svc/topstories/v2/${categoria}.json?api-key=tO6SUAKDEYUsWg6atvEBbfU1mLndKIdO`\n        const response = await fetch(url);\n        const noticias = await response.json();\n        setCargando(true);\n        setTimeout(() => {\n          setCargando(false);\n          setNoticias(noticias.results);\n        }, 2000);\n      }\n      consultarAPI()\n    }\n  }, [categoria]);\n\n  const componente = (cargando) ?\n    <Spinner />\n    : <ListadoNoticias noticias={noticias} />\n  return (\n    <Fragment>\n      <Header\n        titulo=\"News look up\"\n      />\n      <div className=\"container\">\n        <Formulario\n          setCategoria={setCategoria}\n        />\n        {componente}\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}